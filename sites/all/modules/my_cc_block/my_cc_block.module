<?php

function my_cc_block_block_info() {
    $blocks['new_waiver'] = array(
        'info' => t('New waiver block'),
    );
    return $blocks;
}

/**
 * Implementation of hook_block_view().
 */
function my_cc_block_block_view($delta = '') {
    $block = array();
    switch ($delta) {
        case 'new_waiver':
            $block['subject'] = t('Block Name');
            $block['content'] = drupal_get_form('new_waiver_form');
            break;
    }
    return $block;
}

/**
 * 
 * @param type $form
 * @param type $form_state
 * @return type
 * Define a form for creating new waiver content type.
 */
function new_waiver_form($form, &$form_state) {
    $form['waiver_name'] = array(
        // #type tells drupal what kind of element to build
        '#type' => 'textfield',
        // we want this field to be required
        '#required' => TRUE,
        // The "label" for this field
        '#title' => t("Your new Waiver name"),
        // Optional description
        '#description' => t('Must be a unique name'),
    );

    $form['submit'] = array(
        '#type' => 'submit',
        // #value is the text to display inside the button
        '#value' => t('Submit'),
    );

    return $form;
}

/*
 * Define a validation function that drupal will
 * automatically call when the submit button is pressed.
 * 
 */
function new_waiver_form_validate($form, &$form_state) {
    // Drupal stows away all of the form elements into
    // $form_state['values'].  We find our 'waiver_name'
    // element and assign it to a variable for easy
    // reference.
    $waiver_name = $form_state['values']['waiver_name'];
    
    // Check if the content type name is already exists.
    if (in_array('waiver_' . $waiver_name, node_type_get_names())) {
        form_set_error('waiver_name', $waiver_name . ' '. t('Is already exists'));
    }
}

/*
 * Define a submit funciton that drupal will
 * automatically call when submit is pressed (and all validators pass)
 */
function new_waiver_form_submit($form, &$form_state) {
        $waiver_name = $form_state['values']['waiver_name'];
        // machine name of the content type
        $name = 'waiver_' . $waiver_name;

        // define the node type
        $new_node = array(
            'type' => $name,
            'name' => $name,
            'base' => 'node_content',
            'title_label' => t($waiver_name),
            'description' => t('simple waiver'),
            'custom' => TRUE,
        );

        // create new content type and save it.
        $content_type = node_type_set_defaults($new_node);
        node_type_save($content_type);
        drupal_set_message(t('content type name ') . $name .' ' . t('has created, lets go edit it!'));
}
